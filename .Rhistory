imp=mice(xxx,m=m2,method = method2,maxit = maxit2)
#  fit=with(imp,lm(imp$imp[[1]]~.,data=imp))
#  pooled=pool(fit)
#  summary(pooled)
result=complete(imp,action=1)
return(result)
}
data.Multi(sleep,3,"pmm",3)
data.Multi2<-function(xxx,m2,method2,maxit2,formu){
library(mice)
ex<-expression(formu)
imp=mice(xxx,m=m2,method = method2,maxit = maxit2)
fit <- with(imp,deparse(substitute(ex)))
pooled <- pool(fit)
summary(pooled)
result=complete(imp,action=1)
return(result)
}
data.Multi2(sleep,3,"pmm",3,lm(Dream~Span+Gest))
#answer2
data.Multi2<-function(xxx,m2,method2,maxit2,formu){
library(mice)
ex<-deparse(substitute(formu))
imp=mice(xxx,m=m2,method = method2,maxit = maxit2)
fit <- with(imp,ex)
pooled <- pool(fit)
summary(pooled)
result=complete(imp,action=1)
return(result)
}
data.Multi2(sleep,3,"pmm",3,lm(Dream~Span+Gest))
formu<-"lim"
formu<-"print("success")"
formu<-"print(\"success\")"
expression(formu)
formu<-"a<-1"
a
expression(formu)
ex<-expression(formu)
ex
ex<-parse(formu)
formu
ex<-eval(parse(text=formu))
ex
a
data.Multi2<-function(xxx,m2,method2,maxit2,formu){
library(mice)
imp=mice(xxx,m=m2,method = method2,maxit = maxit2)
fit <- with(imp,eval(parse(text=formu)))
pooled <- pool(fit)
summary(pooled)
result=complete(imp,action=1)
return(result)
}
data.Multi2(sleep,3,"pmm",3,lm(Dream~Span+Gest))
data.Multi2<-function(xxx,m2,method2,maxit2,formu){
library(mice)
imp=mice(xxx,m=m2,method = method2,maxit = maxit2)
fit <- with(imp,eval(parse(text=formu)))
pooled <- pool(fit)
summary(pooled)
result=complete(imp,action=1)
return(result)
}
data.Multi2(sleep,3,"pmm",3,"lm(Dream~Span+Gest)")
plt.show()
```{r setup,include=FALSE}
```{r setup,include=FALSE}
install.packages("reticulate")
reticulate
```{r setup,include=FALSE}
#```{python}
import pandas
py_available()
library(reticulate)
py_available()
install.packages("PythonInR")
library(reticulate)
py_available()
library(reticulate)
library(PythonInR)
py_available()
Sys.which("python")
plt.show()
py_available()
```{r setup,include=FALSE}
install.packages("rPython")
library(reticulate)
library(PythonInR)
py_available()
library(reticulate)
library(PythonInR)
py_available()
from sklearn.datasets.samples_generator import make_blobs
```{r setup,include=FALSE}
library(reticulate)
use_python("/usr/local/bin/python")
py_available()
library(reticulate)
os <- import("os")
os$listdir(".")
```{python}
#```{r,include=FALSE}
library(reticulate)
#```{r,include=FALSE}
library(reticulate)
library(PythonInR)
#py_available()
#use_condaenv("r-reticulate")
#```
```{python}
import pandas
import matplotlib.pyplot as plt
from sklearn.datasets.samples_generator import make_blobs
data, target = make_blobs(n_samples=1000, n_features=2, centers=[[-2,-2],[1,1],[3,3],[5,5]], cluster_std=[0.4,0.2,0.1,0.3], random_state=7)
plt.scatter(data[:, 0], data[: ,1], c=target, marker='o')
plt.show()
```
library(reticulate)
library(PythonInR)
#py_available()
#use_condaenv("r-reticulate")
#```
```{python}
import pandas
import matplotlib.pyplot as plt
from sklearn.datasets.samples_generator import make_blobs
data, target = make_blobs(n_samples=1000, n_features=2, centers=[[-2,-2],[1,1],[3,3],[5,5]], cluster_std=[0.4,0.2,0.1,0.3], random_state=7)
plt.scatter(data[:, 0], data[: ,1], c=target, marker='o')
plt.show()
```
library("reticulate")
```{python}
#```{r,include=FALSE}
library("reticulate")
```{python}
library(reticulate)
library(PythonInR)
py_available()
use_condaenv("r-reticulate")
py_available()
iris
iris2<-iris[,1:4]
iris.kmeans<-kmeans(iris2,3)
iris.kmeans
iris2<-iris[,1:4]
iris.kmeans<-kmeans(iris2,3)
iris.kmeans<-kmeans(iris2,3)
iris.kmeans
plot(iris2$Sepal.Length,iris2$Sepal.Width,col=iris.kmeans$cluster,pch="*")
points(iris.kmeans$centers,pch="X",cex=1.5,col=4)
View(iris2)
?kmeans
plot(iris2$Sepal.Length,iris2$Sepal.Width,col=iris.kmeans$cluster,pch="*")
points(iris.kmeans$centers,pch="X",cex=1.5,col=4)
View(iris2)
iris.kmeans$cluster
shiny::runApp('C:/mephas/multiple_comparison_test/Multi_compa/0_All')
runApp('C:/mephas/multiple_comparison_test/Multi_compa/0_All')
runApp('C:/mephas/multiple_comparison_test/Multi_compa/5_Tukey')
str_trim
runApp('C:/mephas/multiple_comparison_test/Multi_compa/0_All')
runApp('C:/mephas/multiple_comparison_test/Multi_compa/0_All')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('mephas_web/2MFSttest')
runApp('mephas_web/7MFSreg_cn')
runApp('mephas_web/1MFSdistribution_cn')
runApp('mephas_web/2MFSttest_cn')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
shiny::runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp()
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
write.csv(iris,file = "C:/mephas/cluster_analysis/iris.csv",row.names = TRUE)
reas.csv(ir,file = "C:/mephas/cluster_analysis/iris.csv",row.names = TRUE)
read.csv(ir,file = "C:/mephas/cluster_analysis/iris.csv",row.names = TRUE)
is<-read.csv(file = "C:/mephas/cluster_analysis/iris.csv",row.names = TRUE)
ir<-read.csv(file = "C:/mephas/cluster_analysis/iris.csv",header = TRUE)
irrs
isis
iris
typeof(iris)
ir2<-iris
ir
write.csv(iris[,1:4],file = "C:/mephas/cluster_analysis/iris.csv",row.names = TRUE )
ir<-read.csv(file = "C:/mephas/cluster_analysis/iris.csv",header = TRUE)
ir
source('C:/mephas/cluster_analysis/Kmeanssample/ni.R')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
View(ir)
View(ir)
iris2<-iris[,1:4]
View(iris2)
View(ir)
View(iris2)
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
shinyUI(navbarPage(
"Cluster analysis",
#panel 1 K-means
tabPanel("K-means",
titlePanel("K-means"),
source("1Kmeans_ui.R", local=TRUE,encoding = "utf-8")$value)
),
theme = "cybrog.css"
)
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
ir<-read.csv(file = "C:/mephas/cluster_analysis/iris.csv",header = TRUE)
kmeans(ir)
ir[1,4]
ir[1]
ir[1:4]
kmeans(ir[1:4])
kmeans(ir[1:4],3)
kmeans(ir,3)
runApp('C:/mephas/cluster_analysis/Kmeanssample')
ir<-read.csv(file = "C:/mephas/cluster_analysis/iris.csv",header = TRUE)
iris
iris[1:4]
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
install.packages("DT")
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/multiple_comparison_test/Multi_compa/0_All')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
summary(kmeans(iris,3))
kmeans(iris,3)
kmeans(iris[1:4],3)
summary(kmeans(iris[1:4],3))
typeof(summary(kmeans(iris[1:4],3)))
typeof(kmeans(iris[1:4],3))
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
ir
names(ir)
ir["Sepal.Length"]
ir["Sepal.Length","Sepal.Width"]
ir[c("Sepal.Length","Sepal.Width")]
typeof(c("Sepal.Length","Sepal.Width"))
typeof("Sepal.Length","Sepal.Width")
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
iris
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
sidebarLayout(
sidebarPanel(
tabsetPanel(
tabPanel("CSV文件",
helpText("文件输入的帮助文本"),
fileInput('KM_file','CSVファイルを指定してください',
accept=c(
'text/csv',
'text/comma-separated-values,text/plain',
'.csv')),
numericInput('KM_clusternumber', '聚类数', 1, 2, 10,1),
uiOutput('clu_vari'),
#             uiOutput('plot_x'),
#             uiOutput('plot_y'),
actionButton("KM_clear","clear")
)
)),
mainPanel(
#    h4('Plot:'),
#    plotOutput('plot1'),
uiOutput('condi_plot'),
h4('Input Confirm:'),
dataTableOutput('KM_table'),
h4('Results:'),
verbatimTextOutput("KM_results"),
h4('Download:'),
downloadButton('KM_download', 'Download')
)
)
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
install.packages("Rtsne")
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/Kmeanssample')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
tsn<-Rtsne(ir)
ir
typeof(ir)
data.frame(ir)
ir
ir<-data.frame(ir)
typeof(ir)
irfd<- data.frame(matrix(ir, nrow=132, byrow=T))
irfd<- data.frame(matrix(ir, nrow=length(ir), byrow=T))
View(irfd)
Rtsne(irfd)
irfd<- data.frame(matrix(ir))
irfd
View(irfd)
irfd<-data.frame(ir)
irdf
typeof(irfd)
class(is)
class(ir)
Rtsne(ir[1:4])
Rtsne(ir)
Rtsne(ir[1:2])
Rtsne(ir[1:3])
Rtsne(iris)
Rtsne(iris[1:4])
Rtsne(iris[1:4],check_duplicates=FALSE)
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
PCA(ir)
princomp(ir)
plot(princomp(ir))
plot(princomp(ir)[1:@])
plot(princomp(ir)[1:2])
plot(princomp(ir)$x)
plot(princomp(ir)$y)
plot(princomp(ir,scale. = TRUE)$x)
data(wine)
wine.pca <- prcomp(wine, scale. = TRUE)
fviz_pca_var(princomp(ir))
install.packages("factoextra")
fviz_pca_var(princomp(ir))
library(factoextra)
fviz_pca_var(princomp(ir))
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
USArrests
plot(kmeans(USArrests,3),data=USArrests)
autoplot(kmeans(USArrests,3),data=USArrests)
library(ggfortify)
autoplot(kmeans(USArrests,3),data=USArrests)
runApp('C:/mephas/cluster_analysis/01_Kmeans')
pca_s<-prcomp(ir)
pca
pca_s
View(pca_s)
pca_s$x
xx<-pca_s$x
View(xx)
plot(xx[,1:2])
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
scale(ir)
scr<-scale(ir)
View(scr)
View(scr)
class(scr)
scr_d<-data.frame(scr)
scr_D
scr_d
scr2<-scale(ir[1:3])
View(scr2)
runApp('C:/mephas/cluster_analysis/01_Kmeans')
runApp('C:/mephas/cluster_analysis/01_Kmeans')
typeof(ir[,1])
ir2<-read.csv(C:/mephas/cluster_analysis/iris.csv,header = T)
ir2<-read.csv(C://mephas//cluster_analysis//iris.csv,header = T)
ir2<-read.csv(iris.csv,header = T)
setwd("C:/mephas")
setwd("C:/mephas/cluster_analysis")
ir2<-read.csv(iris.csv,header = T)
ir2<-read.csv(iris,header = T)
ir2<-read.csv(iris.csv,header = T)
ir2<-read.csv("C://mephas//cluster_analysis//iris.csv",header = T)
ir2
scale(ir2)
typeof(ir2[:6])
typeof(ir2[,6])
typeof(ir2[,7])
typeof(ir2[,5])
typeof(ir2[,4])
typeof(ir2[,3])
typeof(ir2[,2])
typeof(ir2[,1])
mode(ir2[,6])
mode(ir2[,7])
mode(ir2[,5])
mode(ir2[,4])
mode(ir2[,3])
mode(ir2[1])
mode(ir2[2])
mode(ir2[3])
mode(ir2[4])
mode(ir2[5])
mode(ir2[6])
mode(ir2[7])
mode(ir2[1,7])
mode(ir2[1,6])
mode(ir2[1,5])
ir12[1,6]
ir2[1,6]
is.numeric(ir2[1,6])
is.numeric(ir2[6])
is.numeric(ir2[5])
is.numeric(ir2[1,5])
is.numeric(ir2[,6])
is.numeric(ir2[,5])
is.numeric(ir2[,])
is.numeric(irfd[,])
irfd
is.numeric(ir2[,])
filter(!is.na(as.numeric(ir2)))
filter(!is.na(as.numeric(ir2[,])))
filter(!is.na(as.numeric(ir2[1,1])))
runApp('01_Kmeans')
library(dplyr)
detach("package:dplyr", unload = TRUE)
library(dplyr)
install.packages(c("backports", "callr", "car", "clipr", "cmprsk", "coda", "cowplot", "curl", "data.table", "DescTools", "deSolve", "devtools", "digest", "dplyr", "DT", "ellipsis", "evaluate", "exactRankTests", "foreach", "forecast", "fs", "ggfortify", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "git2r", "gridSVG", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "iterators", "jomo", "knitr", "later", "lava", "maptools", "markdown", "mime", "miscTools", "mvtnorm", "openssl", "openxlsx", "pdR", "pillar", "pkgbuild", "pkgconfig", "plm", "pls", "processx", "prodlim", "promises", "purrr", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "recipes", "remotes", "rlang", "rmarkdown", "shiny", "shinyMatrix", "sp", "spls", "strucchange", "survminer", "sys", "tibble", "tidyr", "TTR", "usethis", "whisker", "xfun", "XML", "xtable", "zip", "zoo"))
install.packages(c("boot", "cluster", "foreign", "KernSmooth", "MASS", "Matrix", "mgcv", "nlme", "rpart", "survival"), lib="C:/Program Files/R/R-3.5.3/library")
install.packages(c("boot", "cluster", "foreign", "KernSmooth", "MASS", "Matrix", "mgcv", "nlme", "rpart", "survival"), lib = "C:/Program Files/R/R-3.5.3/library")
install.packages(c("boot", "cluster", "foreign", "KernSmooth", "MASS", "Matrix", "mgcv", "nlme", "rpart", "survival"), lib = "C:/Program Files/R/R-3.5.3/library")
install.packages(c("boot", "cluster", "foreign", "KernSmooth", "MASS", "Matrix", "mgcv", "nlme", "rpart", "survival"), lib = "C:/Program Files/R/R-3.5.3/library")
shiny::runApp('01_Kmeans')
runApp('01_Kmeans')
runApp('01_Kmeans',quiet = TRUE)
runApp('01_Kmeans',display.mode = "showcase")
runApp('01_Kmeans')
runApp('01_Kmeans')
runApp('01_Kmeans',display.mode = "showcase")
runApp('01_Kmeans')
runApp('01_Kmeans')
runApp('01_Kmeans')
runApp('01_Kmeans')
runApp('01_Kmeans')
runApp('01_Kmeans')
runApp('01_Kmeans')
